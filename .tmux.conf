# set prefix
unbind C-b
set -g prefix C-s

# make tmux more responsive
set -s escape-time 1

# start window/pane index at 1 because stretching to 0 sucks
set -g base-index 1
set -g pane-base-index 1

# set colors
set -g default-terminal "screen-256color"
set-option -g status-keys "emacs"
set-window-option mode-keys vi
# set -g mouse on

# This allows for rapid iteration on your configuration
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded!"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
#bind-key -n C-h select-pane -L
#bind-key -n C-j select-pane -D
#bind-key -n C-k select-pane -U
#bind-key -n C-l select-pane -R

set-option -g status-bg '#666666'
set-option -g status-fg '#aaaaaa'

set-option -g status-left-length 50

set-option -g status-right "#(date '+%a, %b %d - %I:%M') "
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \ split-window -h  -c '#{pane_current_path}'

bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# bind-key a split-window -h -c Work/storefront "docker attach bouqs_app"
# bind-key b split-window -h -c Work/storefront "vim"
# bind-key c split-window -h "rails console"
# bind-key c split-window -h -c Work/storefront "docker-compose run --rm app bin/rails console"
# bind-key u split-window -h -c Work/storefront "docker-compose up -d app"
# bind-key v new-window -c code/amherst/ "vagrant up; vagrant ssh"

